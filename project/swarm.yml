version: '3'
services: 

  caddy:
    image: berni23/micro-caddy:1.0.2
    deploy:
     mode: replicated
     replicas: 1
    ports: 
    - "80:80"
    - "443:443" #ssl encrypted secure port
    - "9000:9000"
    - "9001:9001"
    volumes:
    - caddy_data:/data
    - caddy_config:/config

  front-end:
   image: berni23/front-end:1.0.2
   deploy:
     mode: replicated
     replicas: 1
  broker-service: 
    image: berni23/broker-service:1.0.2    
    deploy: 
      mode: replicated
      replicas: 1
  
  listener-service:
    image: berni23/listener-service:1.0.2
    
    deploy:
      mode: replicated
      replicas: 1
  
  authentication-service:

    image: berni23/authentication-service:1.0.2
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  logger-service:
    image: berni23/logger-service:1.0.2
    deploy:
      mode: replicated
      replicas: 1
  
  mail-service:
    image: berni23/mail-service:1.0.2
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_NAME: "John Smith"
      FROM_ADDRESS: john.smith@example.com
    
  rabbitmq: 
    image: 'rabbitmq:3-management'
    deploy:
      mode: global
    
    # for production purposes, we probably need a volume assigned for rabbit MQ
 
  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "8025:8025"
    deploy:
     mode: global
  
  mongo: 
    image: 'mongo:4.2.17-bionic'
    ports: 
      - "27017:27017"
    deploy:
      mode: global
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db

  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:

      - ./db-data/postgres/:/var/lib/postgresql/data:z
      # - ./db-data/postgres:/postgresql:z
    
volumes:
  caddy_data:
    external: true
  caddy_config: